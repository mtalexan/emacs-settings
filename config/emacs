;; .emacs

;; This sets up the load-path, so we can't rely on that until this is properly
;; loaded.  As a result, this should be a run-time optimized call so the file
;; can be byte-compiled

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(load "~/.emacs.d/config/startup/emacs.__loadpath")
;; Only the options from before the custom-set-variables and custom-set-faces
(load "emacs._00preload")

;; The custom-set variables must be directly in this file or emacs
;; will put some back in here
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(auto-coding-alist
   (quote
    (("\\.\\(arc\\|zip\\|lzh\\|lha\\|zoo\\|[jew]ar\\|xpi\\|rar\\|ARC\\|ZIP\\|LZH\\|LHA\\|ZOO\\|[JEW]AR\\|XPI\\|RAR\\)\\'" . no-conversion-multibyte)
     ("\\.\\(exe\\|EXE\\)\\'" . no-conversion)
     ("\\.\\(sx[dmicw]\\|odt\\|tar\\|tgz\\)\\'" . no-conversion)
     ("\\.\\(gz\\|Z\\|bz\\|bz2\\|gpg\\)\\'" . no-conversion)
     ("\\.\\(jpe?g\\|png\\|gif\\|tiff?\\|p[bpgn]m\\)\\'" . no-conversion)
     ("\\.pdf\\'" . no-conversion))))
 '(auto-coding-regexp-alist
   (quote
    (("\\`BABYL OPTIONS:[ 	]*-\\*-[ 	]*rmail[ 	]*-\\*-" . no-conversion)
     ("\\`\376\377" . utf-16be-with-signature)
     ("\\`\377\376" . utf-16le-with-signature)
     ("\\`\357\273\277" . utf-8-with-signature))))
 '(bs-must-always-show-regexp "[~]*[^*#].*")
 '(c-basic-offset 4)
 '(c-default-style
   (quote
    ((c-mode . "")
     (c++-mode . "")
     (java-mode . "java")
     (awk-mode . "awk")
     (other . "gnu"))))
 '(c-doc-comment-style
   (quote
    ((c-mode . gtkdoc)
     (c++-mode . gtkdoc)
     (java-mode . javadoc)
     (pike-mode . autodoc))))
 '(column-number-mode t)
 '(custom-enabled-themes '(sanityinc-solarized-dark))
 '(custom-safe-themes
   (quote
    ("f0b0710b7e1260ead8f7808b3ee13c3bb38d45564e369cbe15fc6d312f0cd7a0" "c74e83f8aa4c78a121b52146eadb792c9facc5b1f02c917e3dbb454fca931223" "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa" "a27c00821ccfd5a78b01e4f35dc056706dd9ede09a8b90c6955ae6a390eb1c1e" default)))
 '(delete-active-region (quote kill))
 '(ediff-make-buffers-readonly-at-startup nil)
 '(ediff-prefer-iconified-control-frame t)
 '(ediff-split-window-function (quote split-window-horizontally))
 '(ediff-temp-file-prefix "tmp_diff_")
 '(ediff-use-long-help-message t)
 '(ediff-version-control-package (quote vc))
 '(ediff-window-setup-function (quote ediff-setup-windows-plain))
 '(elscreen-display-tab nil)
 '(elscreen-tab-display-control nil)
 '(elscreen-tab-display-kill-screen nil)
 '(ggtags-executable-directory "/home/dev/global-6.5.6/bin/")
 '(indent-tabs-mode nil)
 '(inhibit-startup-screen t)
 '(ivy-use-selectable-prompt t)
 '(kill-do-not-save-duplicates t)
 '(kill-read-only-ok t)
 '(kill-whole-line nil)
 '(package-selected-packages
   (quote
    (async cargo uncrustify-mode company-flx company-quickhelp company-shell company-lua s shut-up smart-mode-line smooth-scrolling spinner swiper visible-mark pallet paradox hydra rust-mode ivy-rich rg wgrep neotree easy-kill zzz-to-char smart-tabs-mode visual-regexp-steroids visual-regexp ace-window ggtags company projectile counsel ivy avy elscreen ibuffer semantic aggressive-indent json-mode lua-mode color-theme-approximate egg multi-term)))
 '(paradox-github-token t)
 '(save-interprogram-paste-before-kill t)
 '(scroll-bar-mode (quote right))
 '(select-enable-primary t)
 '(show-paren-mode t)
 '(show-trailing-whitespace t)
 '(standard-indent 4)
 '(tab-width 4)
 '(tool-bar-mode nil)
 '(uniquify-buffer-name-style (quote forward) nil (uniquify))
 '(whitespace-style
   (quote
    (face trailing tabs spaces lines newline empty indentation space-before-tab space-mark tab-mark newline-mark)))
 '(winner-mode t)
 '(yank-pop-change-selection t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "black" :foreground "tan" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 98 :width normal :foundry "unknown" :family "DejaVu Sans Mono"))))
 '(ediff-current-diff-Ancestor ((t (:background "#553333"))))
 '(ediff-current-diff-B ((t (:background "#553333"))))
 '(ediff-current-diff-C ((t (:background "#553333"))))
 '(ediff-even-diff-A ((t (:background "tomato4"))))
 '(ediff-even-diff-Ancestor ((t (:background "tomato4"))))
 '(ediff-even-diff-B ((t (:background "tomato4"))))
 '(ediff-even-diff-C ((t (:background "tomato4"))))
 '(ediff-fine-diff-Ancestor ((t (:background "#aa2222"))))
 '(ediff-fine-diff-B ((t (:background "#aa2222"))))
 '(ediff-fine-diff-C ((t (:background "#aa2222"))))
 '(ediff-odd-diff-A ((t (:background "tomato4"))))
 '(ediff-odd-diff-Ancestor ((t (:background "tomato4"))))
 '(ediff-odd-diff-B ((t (:background "tomato4"))))
 '(ediff-odd-diff-C ((t (:background "tomato4")))))

;; basic functionality modifications
(load "emacs._02base")
;; basic keys
(load "emacs._03keys")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Non-Package Modules
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Basic new functionality or modifications to built-in functionality which isn't part of a new package
(load "emacs.isearch")
(load "emacs.ediff")
(load "emacs.cursor-color")
(load "emacs.winner")
(load "emacs.lock-window")
(load "emacs.indent-tabs")
(load "emacs.window-split-direction")
(load "emacs.unpop-mark")
(load "emacs.smart-beginning-of-line")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Package Module Settings Variables
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defvar use-helm-instead-of-ivy nil ; default ivy-counsel-swiper
  "Variable selecting between helm and ivy/counsel/swiper in custom config")
(defvar use-avy-instead-of-ace-jump t ; default avy
  "Variable selecting between Avy and ace-jump-mode in custom config")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Package Module Local Overrides
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; This file can optionally exist, and will override some things in the settings for existing packages
;; It can also change the defvar settings above
(let ((file "emacs.local-overrides"))
  (if (file-executable-p file) (load file)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Package Modules
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(load "emacs.async")
(load "emacs.paradox")
(load "emacs.linum")
(load "emacs.smoothscrolling")
(load "emacs.visible-mark")
(load "emacs.rich-minority")
(load "emacs.smart-mode-line")
(load "emacs.elscreen")
(when use-helm-instead-of-ivy ; must be done before the avy vs ace-jump-mode check
    (load "emacs.helm"))
(if use-avy-instead-of-ace-jump ; pick either ace-jump-mode or avy
   (load "emacs.avy")
   (load "emacs.ace-jump-mode")
  )
(when (not use-helm-instead-of-ivy)
    (load "emacs.ivy")
    (load "emacs.ivy-rich")
    (load "emacs.counsel")
    (load "emacs.counsel-projectile")
    (load "emacs.swiper")
  )
(load "emacs.projectile")
(when use-helm-instead-of-ivy
    (load "emacs.helm-projectile"))
(load "emacs.company")
(load "emacs.company-lua")
(load "emacs.company-shell")
(load "emacs.company-quickhelp")
(load "emacs.company-flx")
(load "emacs.semantic")
(load "emacs.ggtags") ; auto-handles dependence on gtags installed on host
(load "emacs.ace-window")
(load "emacs.visual-regexp")
(load "emacs.visual-regexp-steroids")
(load "emacs.ibuffer")
(load "emacs.smart-tab")
(load "emacs.guess-style")
(load "emacs.zzz-to-char")
(load "emacs.easy-kill")
(load "emacs.rg") ; auto-handles dependence on ripgrep installed on host
(load "emacs.neotree") ; hidden until F8 is pressed

(load "emacs.color-theme-sanityinc-solarized") ; must be here before custom-set variables uses it

;; Things that can be considered for enabling but aren't
;(load "emacs.function-args")
;(load "emacs.xcscope")
;(load "emacs.clearcase")
;(load "emacs.sr-speedbar")
;(load "emacs.egg")
;multi-term doesn't show output correctly
;(load "emacs.multi-term")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Local emacs script is the only thing that should be loaded here
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; This should always be last.  It configures for the specific system and isn't tracked, so it should be
;; able to optionally override everything else in this file
(let ((file "emacs.local"))
  (if (file-executable-p file) (load file)))
